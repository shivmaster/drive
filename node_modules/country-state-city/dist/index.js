"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var country_json_1 = __importDefault(require("./lib/country.json"));
var state_json_1 = __importDefault(require("./lib/state.json"));
var city_json_1 = __importDefault(require("./lib/city.json"));
var _findEntryByCode = function (source, code) {
    if (code && source != null) {
        var codex = source.findIndex(function (c) {
            return c.isoCode === code;
        });
        return codex !== -1 ? source[codex] : '';
    }
    return '';
};
var compare = function (a, b) {
    if (a.name < b.name)
        return -1;
    if (a.name > b.name)
        return 1;
    return 0;
};
exports.default = {
    getStatesOfCountry: function (countryCode) {
        var states = state_json_1.default.filter(function (value) {
            return value.countryCode === countryCode;
        });
        return states.sort(compare);
    },
    getCitiesOfState: function (countryCode, stateCode) {
        var cities = city_json_1.default.filter(function (value) {
            return value.countryCode === countryCode && value.stateCode === stateCode;
        });
        return cities.sort(compare);
    },
    getCitiesOfCountry: function (countryCode) {
        var cities = city_json_1.default.filter(function (value) {
            return value.countryCode === countryCode;
        });
        return cities.sort(compare);
    },
    getAllCountries: function () {
        return country_json_1.default;
    },
    getAllStates: function () {
        return state_json_1.default;
    },
    getAllCities: function () {
        return city_json_1.default;
    },
    getCountryByCode: function (isoCode) {
        return _findEntryByCode(country_json_1.default, isoCode);
    },
    getStateByCode: function (isoCode) {
        return _findEntryByCode(state_json_1.default, isoCode);
    },
};
